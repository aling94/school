// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/2/RAM4K.hdl
// Designed by Alvin Ling
/**
 * Memory of 4K registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM4K[address(t)](t)
 *     Write: If load(t-1) then RAM4K[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM4K {

    IN  in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in = load, sel = address[9..11], a = load0, b = load1,
		c = load2, d = load3, e = load4, f = load5, g = load6, h  = load7);

    RAM512(in = in, address = address[0..8], load = load0, out = out0);
    RAM512(in = in, address = address[0..8], load = load1, out = out1);
    RAM512(in = in, address = address[0..8], load = load2, out = out2);
    RAM512(in = in, address = address[0..8], load = load3, out = out3);
    RAM512(in = in, address = address[0..8], load = load4, out = out4);
    RAM512(in = in, address = address[0..8], load = load5, out = out5);
    RAM512(in = in, address = address[0..8], load = load6, out = out6);
    RAM512(in = in, address = address[0..8], load = load7, out = out7);

    Mux8Way16(a = out0, b = out1, c = out2, d = out3, e = out4, f = out5,
		g = out6, h  = out7, sel = address[9..11], out = out);
}

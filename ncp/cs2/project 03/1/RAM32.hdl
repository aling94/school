// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/2/RAM16K.hdl
// Designed by Alvin Ling
/**
 * Memory of 16K registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM16K[address(t)](t)
 *     Write: If load(t-1) then RAM16K[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */


CHIP RAM16K {

    IN  in[16], load, address[5];
    OUT out[16];

    PARTS:
    DMux4Way(in = load, sel = address[3..4], a = load0, b = load1, c = load2, d = load3);

    RAM8(in = in, address = address[0..2], load = load0, out = out0);
    RAM8(in = in, address = address[0..2], load = load1, out = out1);
    RAM8(in = in, address = address[0..2], load = load2, out = out2);
    RAM8(in = in, address = address[0..2], load = load3, out = out3);

    Mux4Way16(a = out0, b = out1, c = out2, d = out3, sel = address[3..4], out = out);
}


==================== FINAL INTERFACE ====================
2016-05-09 19:32:55.654459 UTC

interface main@main:Continuation 7102
  interface hash: f9e0122c307a76f644d39f745c0190bf
  ABI hash: 201e0b322903afc3dedae16ecb0d51d4
  export-list hash: 5cca52b832bcbdb6d382ca73f2190f89
  orphan hash: b92828aba50e1ce3dbdb2f89e8c84b2a
  flag hash: e90500f0c5b5a8191a60e51246bc549f
  sig of: Nothing
  used TH splices: False
  where
exports:
  Continuation.cpsDecl
  Continuation.cpsExp
  Continuation.evenoddk
  Continuation.factk
  Continuation.fixMe
  Continuation.gensym
  Continuation.isSimple
  Continuation.repl
module dependencies:
package dependencies: array-0.5.1.0@array_E0sTtauuKsGDLZoT7lTbgZ
                      base-4.8.1.0* binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd
                      bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH
                      containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN
                      deepseq-1.4.1.1@deeps_LbCWUlehDDeLxurARKDH5o ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0 mp3-cps-0.1.0.0@mp3cp_8Kpact7Y9qeG6n46X6WEAH
                      mtl-2.2.1@mtl_KMpng31YRYc5JfMWFZ3FCU
                      parsec-3.1.9@parse_8fSmqig53hOL2SEu1k9Tv0
                      text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh
                      transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X
orphans: base-4.8.1.0:GHC.Base base-4.8.1.0:GHC.Float
         binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH:Data.ByteString.Builder
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Lazy
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Show
         transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X:Control.Monad.Trans.Error
family instance modules: base-4.8.1.0:Control.Applicative
                         base-4.8.1.0:Data.Either base-4.8.1.0:Data.Functor.Identity
                         base-4.8.1.0:Data.Monoid base-4.8.1.0:Data.Type.Equality
                         base-4.8.1.0:Data.Void base-4.8.1.0:GHC.Exts
                         base-4.8.1.0:GHC.Generics
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntMap.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntSet.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Map.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Sequence
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Set.Base
                         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
                         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Lazy
import  -/  base-4.8.1.0:Data.Either bc9482e78cc431fce439b593377aa2e6
import  -/  base-4.8.1.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.1.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.1.0:GHC.Real 4c3b525ecbd4d62bb287aec36d4c2f0d
import  -/  base-4.8.1.0:GHC.Show b8c65ca3124f92a166c9f05120382442
import  -/  base-4.8.1.0:Prelude 518f762991bc287d78f21a73c974da1f
import  -/  base-4.8.1.0:System.IO d541b8bdf18c04de3ab7ea0277c4eba3
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  integer-gmp-1.0.0.0:GHC.Integer.Type bf9b4d13b1dbe96a83786d2e47d2e8ca
import  -/  mp3-cps-0.1.0.0@mp3cp_8Kpact7Y9qeG6n46X6WEAH:Lib bf403bc09eac9ff94026c976f893d430
05ca90cc6ee823e189141c6b6ea6d1d6
  $wa ::
    ()
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
  {- Arity: 2, Strictness: <S,1*H><L,U>, Inline: [0] -}
834777fa1c77ba0e5e496935ce3590d9
  $wcpsExp ::
    Lib.Exp
    -> Lib.Exp
    -> GHC.Integer.Type.Integer
    -> (# Lib.Exp, GHC.Integer.Type.Integer #)
  {- Arity: 3, Strictness: <S,1*U><L,U><L,U>, Inline: [0] -}
90926e1027b5c1ee610f7c1a820defd2
  $wgensym ::
    GHC.Integer.Type.Integer
    -> (# GHC.Base.String, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ w :: GHC.Integer.Type.Integer ->
                 (# GHC.CString.unpackAppendCString#
                      "v"#
                      (case GHC.Show.$w$cshowsPrec1
                              0
                              w
                              (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                       GHC.Types.: @ GHC.Types.Char ww3 ww4 }),
                    GHC.Integer.Type.plusInteger w Continuation.cpsDecl1 #)) -}
ee1d473a959e3ca84e649b845f96e241
  cpsDecl :: Lib.Stmt -> Lib.Stmt
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: Lib.Stmt ->
                 case w of ww { Lib.Decl ww1 ww2 ww3 ->
                 Lib.Decl
                   (GHC.Base.++
                      @ GHC.Types.Char
                      ww1
                      (GHC.CString.unpackCString# "k"#))
                   (GHC.Base.++ @ [GHC.Types.Char] ww2 Continuation.cpsDecl4)
                   (case Continuation.$wcpsExp
                           ww3
                           Continuation.cpsDecl2
                           Continuation.cpsDecl1 of ww4 { (#,#) ww5 ww6 ->
                    ww5 }) }) -}
aa0b8fc4c6e77518c5ecb449f319b595
  cpsDecl1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 1) -}
2584fd6553f284effbba6aaa806a9ab4
  cpsDecl2 :: Lib.Exp
  {- Strictness: m5, Unfolding: (Lib.VarExp Continuation.cpsDecl3) -}
a439d3bbaf58427af2fb6fe61363960c
  cpsDecl3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "k"#) -}
83f21878131f68a1b27736c7fc0d1bb6
  cpsDecl4 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Continuation.cpsDecl3
                   (GHC.Types.[] @ GHC.Base.String)) -}
4b0df23b9b9d24242d541b366c2ee67a
  cpsExp ::
    Lib.Exp
    -> Lib.Exp
    -> GHC.Integer.Type.Integer
    -> (Lib.Exp, GHC.Integer.Type.Integer)
  {- Arity: 3, Strictness: <S,1*U><L,U><L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ w :: Lib.Exp w1 :: Lib.Exp w2 :: GHC.Integer.Type.Integer ->
                 case Continuation.$wcpsExp w w1 w2 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
fc031456a0cfcb545afc95c735b2f1f0
  evenoddk :: GHC.Real.Integral r => [r] -> (r -> t) -> (r -> t) -> t
  {- Arity: 4,
     Strictness: <S(SLLLLLLLL),U(U,A,A,C(C1(U)),A,A,A,A,A)><S,1*U><L,1*C1(U)><L,1*C1(U)> -}
01f9eb3f4bf2bebcf07ed63b8d0da32e
  factk ::
    GHC.Integer.Type.Integer -> (GHC.Integer.Type.Integer -> a) -> a
  {- Arity: 2, Strictness: <S,U><C(S),1*C1(U)> -}
33d35c0b3f472a16d93cef9cd2263885
  fixMe :: t
  {- Strictness: b -}
6f3fe550c0929a1bf93654673a84a86d
  gensym ::
    GHC.Integer.Type.Integer
    -> (GHC.Base.String, GHC.Integer.Type.Integer)
  {- Arity: 1, Strictness: <L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: GHC.Integer.Type.Integer ->
                 case Continuation.$wgensym w of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
5482193f231356c6f2a94fa25f8179fa
  isSimple :: Lib.Exp -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
f21d6bbeb41e94676d4895fc914d2979
  repl :: () -> GHC.Types.IO b
  {- Arity: 2, Strictness: <S,1*H><L,U>,
     Unfolding: InlineRule (0, True, True)
                Continuation.repl1
                  `cast`
                (forall b. <()>_R ->_R Sym (GHC.Types.NTCo:IO[0] <b>_R)) -}
669bb75031709ed075d41b0342d49c93
  repl1 ::
    ()
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
  {- Arity: 2, Strictness: <S,1*H><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ b w :: () w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w of w2 { () -> Continuation.$wa @ b GHC.Tuple.() w1 }) -}
"SPEC/Continuation toStr @ Stmt" [ALWAYS] forall tpl :: Lib.ToStr
                                                          Lib.Stmt
  Lib.toStr @ Lib.Stmt tpl = Lib.$fToStrStmt_$ctoStr
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False


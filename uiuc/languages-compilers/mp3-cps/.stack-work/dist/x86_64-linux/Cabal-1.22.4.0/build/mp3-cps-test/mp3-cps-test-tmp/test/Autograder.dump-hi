
==================== FINAL INTERFACE ====================
2016-05-09 19:32:57.358707 UTC

interface main@main:Autograder 7102
  interface hash: 5a4e5dce504f4495d3e70f81c2001d95
  ABI hash: 1ac7b2b90b57fb032d3657fb05b0603e
  export-list hash: 67326183a70a99f1fc0eb1a2207e4cdc
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b4ec931748579a12fd6cc845af42ec36
  sig of: Nothing
  used TH splices: False
  where
exports:
  Autograder.silentQC
  Autograder.testCases
  Autograder.testProp
module dependencies:
package dependencies: QuickCheck-2.8.1@Quick_BnZKeqxVf7FCbnejbqAnPL
                      array-0.5.1.0@array_E0sTtauuKsGDLZoT7lTbgZ base-4.8.1.0*
                      containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN
                      deepseq-1.4.1.1@deeps_LbCWUlehDDeLxurARKDH5o ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0 pretty-1.1.2.0@prett_7UQTOB05U7lIYPkFOVraeR
                      primitive-0.6.1.0@primi_5Jnw7oEuYtM9dmKXelGXVb
                      random-1.1@rando_1z8Ujelqc6aKgvPnbRUKkP template-haskell-2.10.0.0
                      tf-random-0.5@tfran_28prfR75qTK8HkPsc02Mdm
                      time-1.5.0.1@time_AXTdBF9VRQoBOqJT6qtmVH
                      transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X
orphans: base-4.8.1.0:GHC.Base base-4.8.1.0:GHC.Float
         time-1.5.0.1@time_AXTdBF9VRQoBOqJT6qtmVH:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_AXTdBF9VRQoBOqJT6qtmVH:Data.Time.Format.Parse
         time-1.5.0.1@time_AXTdBF9VRQoBOqJT6qtmVH:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X:Control.Monad.Trans.Error
family instance modules: base-4.8.1.0:Control.Applicative
                         base-4.8.1.0:Data.Either base-4.8.1.0:Data.Functor.Identity
                         base-4.8.1.0:Data.Monoid base-4.8.1.0:Data.Type.Equality
                         base-4.8.1.0:Data.Void base-4.8.1.0:GHC.Exts
                         base-4.8.1.0:GHC.Generics
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Map.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Set.Base
                         pretty-1.1.2.0@prett_7UQTOB05U7lIYPkFOVraeR:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primi_5Jnw7oEuYtM9dmKXelGXVb:Control.Monad.Primitive
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
import  -/  QuickCheck-2.8.1@Quick_BnZKeqxVf7FCbnejbqAnPL:Test.QuickCheck 56c452ad8c9684c4a3ff945aba05abd7
import  -/  QuickCheck-2.8.1@Quick_BnZKeqxVf7FCbnejbqAnPL:Test.QuickCheck.Arbitrary 3fdf633d44730c022dfe4dd1b567e931
import  -/  QuickCheck-2.8.1@Quick_BnZKeqxVf7FCbnejbqAnPL:Test.QuickCheck.Gen eb8685919db3fea4d81cf795f8b21544
import  -/  QuickCheck-2.8.1@Quick_BnZKeqxVf7FCbnejbqAnPL:Test.QuickCheck.Test cf350c6a3843ffad9e4400f8967be933
import  -/  base-4.8.1.0:Control.Monad dfea142d91349c4861427789d50d5b80
import  -/  base-4.8.1.0:Data.Foldable 2e5acb797cfda6b3b7fabd7052abe290
import  -/  base-4.8.1.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.1.0:GHC.Show b8c65ca3124f92a166c9f05120382442
import  -/  base-4.8.1.0:Prelude 518f762991bc287d78f21a73c974da1f
import  -/  base-4.8.1.0:System.IO d541b8bdf18c04de3ab7ea0277c4eba3
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
4b0e993e4b77c4d2fda192986328cb9f
  $wa ::
    (GHC.Classes.Eq a, GHC.Show.Show a1) =>
    (a1 -> a)
    -> [GHC.Types.Char]
    -> [(a1, a)]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6,
     Strictness: <L,U(A,C(C1(U)))><L,U(A,C(U),A)><L,C(U)><L,1*U><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ a1
                   w :: GHC.Classes.Eq a
                   w1 :: GHC.Show.Show a1
                   ww :: a1 -> a
                   ww1 :: [GHC.Types.Char]
                   ww2 :: [(a1, a)]
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.CString.unpackAppendCString#
                           "Running tests for "#
                           (GHC.Base.++ @ GHC.Types.Char ww1 Autograder.testCases2))
                        GHC.Types.True
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 letrec {
                   a2 :: [(a1, a)]
                         -> GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                     {- Arity: 2, Strictness: <S,1*U><L,U> -}
                   = \ ds :: [(a1, a)]
                       eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                     case ds of wild {
                       [] -> (# eta, GHC.Tuple.() #)
                       : y ys
                       -> case GHC.IO.Handle.Text.hPutStr2
                                 GHC.IO.Handle.FD.stdout
                                 (case y of wild1 { (,) test result ->
                                  case GHC.Classes./= @ a w (ww test) result of wild2 {
                                    GHC.Types.False
                                    -> GHC.CString.unpackAppendCString#
                                         "\tPassed Test: "#
                                         (GHC.Show.show @ a1 w1 test)
                                    GHC.Types.True
                                    -> GHC.CString.unpackAppendCString#
                                         "\tFailed Test: "#
                                         (GHC.Show.show @ a1 w1 test) } })
                                 GHC.Types.True
                                 eta of ds2 { (#,#) ipv2 ipv3 ->
                          a2 ys ipv2 } }
                 } in
                 a2 ww2 ipv }) -}
46992f7bb04c0fc46c9dccbac32590f2
  silentQC ::
    Test.QuickCheck.Property.Testable prop =>
    prop -> GHC.Types.IO Test.QuickCheck.Test.Result
  {- Arity: 3, Strictness: <L,U(C(U),C(U))><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Autograder.silentQC1
                  `cast`
                (forall prop.
                 <Test.QuickCheck.Property.Testable prop>_R
                 ->_R <prop>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <Test.QuickCheck.Test.Result>_R)) -}
89080d09c038ebe6a9bc311cefbb255d
  silentQC1 ::
    Test.QuickCheck.Property.Testable prop =>
    prop
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.QuickCheck.Test.Result #)
  {- Arity: 3, Strictness: <L,U(C(U),C(U))><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ prop
                   $dTestable :: Test.QuickCheck.Property.Testable prop
                   p :: prop
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Test.QuickCheck.Test.$wa7
                   @ prop
                   $dTestable
                   (GHC.Base.Nothing @ (Test.QuickCheck.Random.QCGen, GHC.Types.Int))
                   Test.QuickCheck.Test.stdArgs2
                   Test.QuickCheck.Test.stdArgs1
                   Test.QuickCheck.Test.stdArgs2
                   GHC.Types.False
                   p
                   eta) -}
847840eb4a0d6414b8e646b505ec298c
  testCases ::
    (GHC.Classes.Eq a, GHC.Show.Show a1) =>
    (a1 -> a, [GHC.Types.Char], [(a1, a)]) -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <L,U(A,C(C1(U)))><L,U(A,C(U),A)><S,1*U(C(U),1*U,1*U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Autograder.testCases1
                  `cast`
                (forall a a1.
                 <GHC.Classes.Eq a>_R
                 ->_R <GHC.Show.Show a1>_R
                 ->_R <(a1 -> a, [GHC.Types.Char], [(a1, a)])>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
71bbb25def3018fe1dd082f4648ffa15
  testCases1 ::
    (GHC.Classes.Eq a, GHC.Show.Show a1) =>
    (a1 -> a, [GHC.Types.Char], [(a1, a)])
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <L,U(A,C(C1(U)))><L,U(A,C(U),A)><S,1*U(C(U),1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   @ a1
                   w :: GHC.Classes.Eq a
                   w1 :: GHC.Show.Show a1
                   w2 :: (a1 -> a, [GHC.Types.Char], [(a1, a)])
                   w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w2 of ww { (,,) ww1 ww2 ww3 ->
                 Autograder.$wa @ a @ a1 w w1 ww1 ww2 ww3 w3 }) -}
6027951e94a3822f519ce3c6744db159
  testCases2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "."#) -}
319f8e2c194a1bd2e4bf3568ecdb7f70
  testProp ::
    (GHC.Show.Show a, Test.QuickCheck.Arbitrary.Arbitrary a) =>
    (a -> GHC.Types.Bool, [GHC.Types.Char], [a]) -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U(A,C(U),A)><L,U(C(C1(U)),C(U))> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False


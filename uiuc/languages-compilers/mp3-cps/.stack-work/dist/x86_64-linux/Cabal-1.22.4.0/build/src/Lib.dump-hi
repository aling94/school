
==================== FINAL INTERFACE ====================
2016-05-09 19:32:54.112108 UTC

interface mp3cp_8Kpact7Y9qeG6n46X6WEAH:Lib 7102
  interface hash: 1de84ff44617538f3ad4a6cdff1a5f8d
  ABI hash: bf403bc09eac9ff94026c976f893d430
  export-list hash: c74654be8eeba2391fb13db7e5004ded
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 2e117a8c9b3fbab4776a1431aea73d27
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.addOp
  Lib.app
  Lib.appExp
  Lib.arith
  Lib.atom
  Lib.compOp
  Lib.decl
  Lib.expr
  Lib.factor
  Lib.ifExp
  Lib.int
  Lib.intExp
  Lib.keywords
  Lib.lamExp
  Lib.mulOp
  Lib.oper
  Lib.parens
  Lib.parseDecl
  Lib.parseExp
  Lib.symbol
  Lib.term
  Lib.var
  Lib.varExp
  Lib.Exp{Lib.AppExp Lib.IfExp Lib.IntExp Lib.LamExp Lib.OpExp Lib.VarExp}
  Lib.Stmt{Lib.Decl}
  Lib.ToStr{Lib.toStr}
module dependencies:
package dependencies: array-0.5.1.0@array_E0sTtauuKsGDLZoT7lTbgZ
                      base-4.8.1.0* binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd
                      bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH
                      containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN
                      deepseq-1.4.1.1@deeps_LbCWUlehDDeLxurARKDH5o ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0 mtl-2.2.1@mtl_KMpng31YRYc5JfMWFZ3FCU
                      parsec-3.1.9@parse_8fSmqig53hOL2SEu1k9Tv0
                      text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh
                      transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X
orphans: base-4.8.1.0:GHC.Base base-4.8.1.0:GHC.Float
         binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH:Data.ByteString.Builder
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Lazy
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Show
         transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X:Control.Monad.Trans.Error
family instance modules: base-4.8.1.0:Control.Applicative
                         base-4.8.1.0:Data.Either base-4.8.1.0:Data.Functor.Identity
                         base-4.8.1.0:Data.Monoid base-4.8.1.0:Data.Type.Equality
                         base-4.8.1.0:Data.Void base-4.8.1.0:GHC.Exts
                         base-4.8.1.0:GHC.Generics
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntMap.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntSet.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Map.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Sequence
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Set.Base
                         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
                         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Lazy
import  -/  base-4.8.1.0:Data.Foldable 2e5acb797cfda6b3b7fabd7052abe290
import  -/  base-4.8.1.0:Data.List 2a4f5f92892d432e7113f64cd9dcca53
import  -/  base-4.8.1.0:Data.OldList 21f46c368c20a00483b41333e53a55cb
import  -/  base-4.8.1.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.1.0:GHC.Show b8c65ca3124f92a166c9f05120382442
import  -/  base-4.8.1.0:Prelude 518f762991bc287d78f21a73c974da1f
import  -/  base-4.8.1.0:Text.Read 30509137a501bd56d136aca29a7a35a6
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  integer-gmp-1.0.0.0:GHC.Integer.Type bf9b4d13b1dbe96a83786d2e47d2e8ca
import  -/  parsec-3.1.9@parse_8fSmqig53hOL2SEu1k9Tv0:Text.Parsec.Char 72dcc354834bedd2f81e711d87e2742a
import  -/  parsec-3.1.9@parse_8fSmqig53hOL2SEu1k9Tv0:Text.Parsec.Combinator 512874c46bc0cf06f498ceb5acda4ef1
import  -/  parsec-3.1.9@parse_8fSmqig53hOL2SEu1k9Tv0:Text.Parsec.Prim 57a13cdea2676908df1f600d0dcc12c7
import  -/  parsec-3.1.9@parse_8fSmqig53hOL2SEu1k9Tv0:Text.ParserCombinators.Parsec fed41157d76515d041e8b89ebc51bfb3
import  -/  parsec-3.1.9@parse_8fSmqig53hOL2SEu1k9Tv0:Text.ParserCombinators.Parsec.Prim ca836d93f80a527efe80d57b81d83950
9143a466bfb861280c04ec7a7b78782c
  $ctoStr :: Lib.Exp -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
c7b84a88ec9cba75b5efb9f3ff574ca6
  $fEqExp :: GHC.Classes.Eq Lib.Exp
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:. @ Lib.Exp Lib.$fEqExp_$c== Lib.$fEqExp_$c/= -}
c7b84a88ec9cba75b5efb9f3ff574ca6
  $fEqExp_$c/= :: Lib.Exp -> Lib.Exp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a20 :: Lib.Exp b :: Lib.Exp ->
                 case Lib.$fEqExp_$c== a20 b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
c7b84a88ec9cba75b5efb9f3ff574ca6
  $fEqExp_$c== :: Lib.Exp -> Lib.Exp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
1d00497f0ec142264afb0f4e2ed51dc3
  $fEqStmt :: GHC.Classes.Eq Lib.Stmt
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:. @ Lib.Stmt Lib.$fEqStmt_$c== Lib.$fEqStmt_$c/= -}
1d00497f0ec142264afb0f4e2ed51dc3
  $fEqStmt_$c/= :: Lib.Stmt -> Lib.Stmt -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ a20 :: Lib.Stmt b :: Lib.Stmt ->
                 case Lib.$fEqStmt_$c== a20 b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
1d00497f0ec142264afb0f4e2ed51dc3
  $fEqStmt_$c== :: Lib.Stmt -> Lib.Stmt -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: Lib.Stmt w1 :: Lib.Stmt ->
                 case w of ww { Lib.Decl ww1 ww2 ww3 ->
                 case w1 of ww4 { Lib.Decl ww5 ww6 ww7 ->
                 Lib.$w$c== ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
c7b84a88ec9cba75b5efb9f3ff574ca6
  $fShowExp :: GHC.Show.Show Lib.Exp
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Exp
                  Lib.$fShowExp_$cshowsPrec
                  Lib.$fShowExp_$cshow
                  Lib.$fShowExp_$cshowList -}
c7b84a88ec9cba75b5efb9f3ff574ca6
  $fShowExp1 :: Lib.Exp -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ w :: Lib.Exp w1 :: GHC.Base.String ->
                 Lib.$w$cshowsPrec 0 w w1) -}
c7b84a88ec9cba75b5efb9f3ff574ca6
  $fShowExp_$cshow :: Lib.Exp -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x10 :: Lib.Exp ->
                 Lib.$fShowExp_$cshowsPrec
                   GHC.Show.shows18
                   x10
                   (GHC.Types.[] @ GHC.Types.Char)) -}
c7b84a88ec9cba75b5efb9f3ff574ca6
  $fShowExp_$cshowList :: [Lib.Exp] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Lib.Exp Lib.$fShowExp1) -}
c7b84a88ec9cba75b5efb9f3ff574ca6
  $fShowExp_$cshowsPrec :: GHC.Types.Int -> Lib.Exp -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,1*U(U)><S,1*U><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ w :: GHC.Types.Int w1 :: Lib.Exp w2 :: GHC.Base.String ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Lib.$w$cshowsPrec ww1 w1 w2 }) -}
1d00497f0ec142264afb0f4e2ed51dc3
  $fShowStmt :: GHC.Show.Show Lib.Stmt
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Stmt
                  Lib.$fShowStmt_$cshowsPrec
                  Lib.$fShowStmt_$cshow
                  Lib.$fShowStmt_$cshowList -}
1d00497f0ec142264afb0f4e2ed51dc3
  $fShowStmt1 :: Lib.Stmt -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ w :: Lib.Stmt w1 :: GHC.Base.String ->
                 case w of ww { Lib.Decl ww1 ww2 ww3 ->
                 Lib.$w$cshowsPrec1 0 ww1 ww2 ww3 w1 }) -}
066bcd50bf7e4f59d32f8e312bc68be1
  $fShowStmt2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Decl "#) -}
1d00497f0ec142264afb0f4e2ed51dc3
  $fShowStmt_$cshow :: Lib.Stmt -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ x10 :: Lib.Stmt ->
                 Lib.$fShowStmt_$cshowsPrec
                   GHC.Show.shows18
                   x10
                   (GHC.Types.[] @ GHC.Types.Char)) -}
1d00497f0ec142264afb0f4e2ed51dc3
  $fShowStmt_$cshowList :: [Lib.Stmt] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Lib.Stmt Lib.$fShowStmt1) -}
1d00497f0ec142264afb0f4e2ed51dc3
  $fShowStmt_$cshowsPrec ::
    GHC.Types.Int -> Lib.Stmt -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,1*U(U)><S,1*U(1*U,1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ w :: GHC.Types.Int w1 :: Lib.Stmt w2 :: GHC.Base.String ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.Decl ww3 ww4 ww5 ->
                 Lib.$w$cshowsPrec1 ww1 ww3 ww4 ww5 w2 } }) -}
7c7342ffa2ae24de4b8b988ca3ce18aa
  $fToStrExp :: Lib.ToStr Lib.Exp
  DFunId[0]
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Lib.$ctoStr `cast` (Sym (Lib.NTCo:ToStr[0] <Lib.Exp>_N)) -}
7c7342ffa2ae24de4b8b988ca3ce18aa
  $fToStrStmt :: Lib.ToStr Lib.Stmt
  DFunId[0]
  {- Arity: 1, Strictness: <S(SLL),1*U(1*U,1*U,1*U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Lib.$fToStrStmt_$ctoStr
                  `cast`
                (Sym (Lib.NTCo:ToStr[0] <Lib.Stmt>_N)) -}
10116ed4f33199037801d16b57e55658
  $fToStrStmt1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# " "#) -}
c2e50e90960e5d4bba9846b304593100
  $fToStrStmt_$ctoStr :: Lib.Stmt -> GHC.Base.String
  {- Arity: 1, Strictness: <S(SLL),1*U(1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: Lib.Stmt ->
                 case w of ww { Lib.Decl ww1 ww2 ww3 ->
                 Lib.$w$ctoStr ww1 ww2 ww3 }) -}
b8b17388274dca9f3c3bbacf90ba86c8
  $w$c== ::
    GHC.Base.String
    -> [GHC.Base.String]
    -> Lib.Exp
    -> GHC.Base.String
    -> [GHC.Base.String]
    -> Lib.Exp
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ ww :: GHC.Base.String
                   ww1 :: [GHC.Base.String]
                   ww2 :: Lib.Exp
                   ww3 :: GHC.Base.String
                   ww4 :: [GHC.Base.String]
                   ww5 :: Lib.Exp ->
                 case GHC.Base.eqString ww ww3 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Classes.$fEq[]_$s$c==2 ww1 ww4 of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True -> Lib.$fEqExp_$c== ww2 ww5 } }) -}
c7b84a88ec9cba75b5efb9f3ff574ca6
  $w$cshowsPrec ::
    GHC.Prim.Int# -> Lib.Exp -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <L,U><S,1*U><L,U>, Inline: [0] -}
1415a9ae21826384340980179c192c01
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> [GHC.Base.String]
    -> Lib.Exp
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5, Strictness: <L,U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int#
                   ww1 :: GHC.Base.String
                   ww2 :: [GHC.Base.String]
                   ww3 :: Lib.Exp
                   w :: GHC.Base.String ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ x10 :: GHC.Base.String[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Lib.$fShowStmt2
                       (GHC.Types.:
                          @ GHC.Types.Char
                          GHC.Show.shows6
                          (GHC.Show.showLitString
                             ww1
                             (GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.shows6
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.showSpace1
                                   (GHC.Show.showList__
                                      @ [GHC.Types.Char]
                                      GHC.Show.shows_$cshowList
                                      ww2
                                      (GHC.Types.:
                                         @ GHC.Types.Char
                                         GHC.Show.showSpace1
                                         (Lib.$w$cshowsPrec 11 ww3 x10)))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 w)) }) -}
df008def9fd306f4cac1eac380f5b9af
  $w$ctoStr ::
    GHC.Base.String -> [GHC.Base.String] -> Lib.Exp -> GHC.Base.String
  {- Arity: 3, Strictness: <S,1*U><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Base.String
                   ww1 :: [GHC.Base.String]
                   ww2 :: Lib.Exp ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   ww
                   (GHC.CString.unpackAppendCString#
                      " "#
                      (let {
                         n :: [GHC.Types.Char]
                         = GHC.CString.unpackAppendCString# " = "# (Lib.$ctoStr ww2)
                       } in
                       case ww1 of wild {
                         [] -> n
                         : x10 xs1
                         -> GHC.Base.++
                              @ GHC.Types.Char
                              (Data.OldList.intercalate_$spoly_go
                                 @ GHC.Types.Char
                                 x10
                                 (Data.OldList.prependToAll
                                    @ [GHC.Types.Char]
                                    Lib.$fToStrStmt1
                                    xs1))
                              n }))) -}
d5a9b336616f3a3fc9ffb318690142bc
  $wa ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((Lib.Exp -> Lib.Exp -> Lib.Exp)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((Lib.Exp -> Lib.Exp -> Lib.Exp)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0] -}
d0ca80b201343cff69eb3814da4d8e4e
  $wa1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((Lib.Exp -> Lib.Exp -> Lib.Exp)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((Lib.Exp -> Lib.Exp -> Lib.Exp)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0] -}
769b5222b649de493cf6f0b32701f419
  $wa2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((Lib.Exp -> Lib.Exp -> Lib.Exp)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((Lib.Exp -> Lib.Exp -> Lib.Exp)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0] -}
38dbce17695bacd8fb7d7152e28d40b0
  $wa3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] st
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4,
     Strictness: <L,U><L,C(C1(C1(U)))><L,C(C1(C1(U)))><L,U>,
     Inline: [0],
     Unfolding: (\ @ st
                   @ b1
                   w :: Text.Parsec.Prim.State [GHC.Types.Char] st
                   w1 :: Lib.Exp
                         -> Text.Parsec.Prim.State [GHC.Types.Char] st
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w2 :: Lib.Exp
                         -> Text.Parsec.Prim.State [GHC.Types.Char] st
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w3 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 Lib.decl3
                   @ st
                   @ b1
                   w
                   (\ x10 :: [GHC.Types.Char]
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] st
                      err :: Text.Parsec.Error.ParseError ->
                    w1
                      (Lib.VarExp x10)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   w3
                   (\ x10 :: [GHC.Types.Char]
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    w2
                      (Lib.VarExp x10)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   w3) -}
c7b84a88ec9cba75b5efb9f3ff574ca6
  data Exp
    = IfExp Lib.Exp Lib.Exp Lib.Exp
    | OpExp GHC.Base.String Lib.Exp Lib.Exp
    | AppExp Lib.Exp Lib.Exp
    | IntExp GHC.Integer.Type.Integer
    | VarExp GHC.Base.String
    | LamExp GHC.Base.String Lib.Exp
1d00497f0ec142264afb0f4e2ed51dc3
  data Stmt = Decl GHC.Base.String [GHC.Base.String] Lib.Exp
7c7342ffa2ae24de4b8b988ca3ce18aa
  class ToStr a where
    toStr :: a -> GHC.Base.String
6d9e3c87f998e010d7d91ad2e4bd751b
  addOp ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char]
      u
      Data.Functor.Identity.Identity
      (Lib.Exp -> Lib.Exp -> Lib.Exp)
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.addOp1
                  `cast`
                (forall u.
                 Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lib.Exp -> Lib.Exp -> Lib.Exp>_R)) -}
fc76e99e8bc42988645c49a989a0063c
  addOp1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((Lib.Exp -> Lib.Exp -> Lib.Exp)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((Lib.Exp -> Lib.Exp -> Lib.Exp)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ u
                   @ b
                   w :: Text.Parsec.Prim.State [GHC.Types.Char] u
                   w1 :: (Lib.Exp -> Lib.Exp -> Lib.Exp)
                         -> Text.Parsec.Prim.State [GHC.Types.Char] u
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b
                   w2 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b
                   w3 :: (Lib.Exp -> Lib.Exp -> Lib.Exp)
                         -> Text.Parsec.Prim.State [GHC.Types.Char] u
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b
                   w4 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b ->
                 Lib.$wa @ u @ b w w1 w3 w4) -}
1d3f80f7ff28d7d19108712b0c41c613
  app ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] st Data.Functor.Identity.Identity Lib.Exp
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.app1
                  `cast`
                (forall st.
                 Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <st>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lib.Exp>_R)) -}
ebeaf11f3cde1bbbd723e77f29b9a6f9
  app1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] st
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ st
                   @ b1
                   eta :: Text.Parsec.Prim.State [GHC.Types.Char] st
                   eta1 :: Lib.Exp
                           -> Text.Parsec.Prim.State [GHC.Types.Char] st
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta3 :: Lib.Exp
                           -> Text.Parsec.Prim.State [GHC.Types.Char] st
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Combinator.many3
                   @ [GHC.Types.Char]
                   @ st
                   @ Data.Functor.Identity.Identity
                   @ Lib.Exp
                   (Lib.app2 @ st)
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <st>_R
                             <Data.Functor.Identity.Identity>_R
                             <Lib.Exp>_R))
                   @ b1
                   eta
                   (\ x10 :: [Lib.Exp]
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    eta1
                      (case x10 of wild {
                         [] -> GHC.List.foldl2 @ Lib.Exp : x11 xs -> Lib.app_go1 xs x11 })
                      s2
                      (case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eta2
                   (\ x10 :: [Lib.Exp]
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    eta3
                      (case x10 of wild {
                         [] -> GHC.List.foldl2 @ Lib.Exp : x11 xs -> Lib.app_go xs x11 })
                      s2
                      (case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eta4) -}
de1c79f00be74fc1134da6e439cd97ae
  app2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] st
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
daa637e7fff69cbc07dbf4f975f0bc4b
  appExp ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] st Data.Functor.Identity.Identity Lib.Exp
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.appExp1
                  `cast`
                (forall st.
                 Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <st>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lib.Exp>_R)) -}
ed8db2da6cda28c8f86e211deb718e41
  appExp1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] st
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ st
                   @ b1
                   eta :: Text.Parsec.Prim.State [GHC.Types.Char] st
                   eta1 :: Lib.Exp
                           -> Text.Parsec.Prim.State [GHC.Types.Char] st
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta3 :: Lib.Exp
                           -> Text.Parsec.Prim.State [GHC.Types.Char] st
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Combinator.chainl3
                   @ [GHC.Types.Char]
                   @ st
                   @ Data.Functor.Identity.Identity
                   @ Lib.Exp
                   (Lib.appExp4 @ st)
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <st>_R
                             <Data.Functor.Identity.Identity>_R
                             <Lib.Exp>_R))
                   (Lib.appExp3 @ st)
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <st>_R
                             <Data.Functor.Identity.Identity>_R
                             <Lib.Exp -> Lib.Exp -> Lib.Exp>_R))
                   @ b1
                   eta
                   (\ x10 :: Lib.Exp
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    Lib.appExp2
                      @ st
                      x10
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x11 :: Lib.Exp
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta1 x11 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta2 (Text.Parsec.Error.mergeError err err')))
                   eta2
                   (\ x10 :: Lib.Exp
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    Lib.appExp2
                      @ st
                      x10
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x11 :: Lib.Exp
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta3 x11 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta4 (Text.Parsec.Error.mergeError err err')))
                   eta4) -}
c0f6529cedd15a27e0b04a6721c518da
  appExp2 ::
    Lib.Exp
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] st
       -> (Lib.Exp
           -> Text.Parsec.Prim.State [GHC.Types.Char] st
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Lib.Exp
           -> Text.Parsec.Prim.State [GHC.Types.Char] st
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ st
                   e1 :: Lib.Exp
                   @ b
                   eta :: Text.Parsec.Prim.State [GHC.Types.Char] st
                   eta1 :: Lib.Exp
                           -> Text.Parsec.Prim.State [GHC.Types.Char] st
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta3 :: Lib.Exp
                           -> Text.Parsec.Prim.State [GHC.Types.Char] st
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b ->
                 Text.Parsec.Combinator.chainl3
                   @ [GHC.Types.Char]
                   @ st
                   @ Data.Functor.Identity.Identity
                   @ Lib.Exp
                   (Lib.appExp4 @ st)
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <st>_R
                             <Data.Functor.Identity.Identity>_R
                             <Lib.Exp>_R))
                   (Lib.appExp3 @ st)
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <st>_R
                             <Data.Functor.Identity.Identity>_R
                             <Lib.Exp -> Lib.Exp -> Lib.Exp>_R))
                   @ b
                   eta
                   (\ x10 :: Lib.Exp
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    eta1
                      (Lib.AppExp e1 x10)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eta2
                   (\ x10 :: Lib.Exp
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    eta3
                      (Lib.AppExp e1 x10)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eta4) -}
4d16b89f603d886414a1f527d4ae7ad3
  appExp3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((Lib.Exp -> Lib.Exp -> Lib.Exp)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((Lib.Exp -> Lib.Exp -> Lib.Exp)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ u
                   @ b
                   w :: Text.Parsec.Prim.State [GHC.Types.Char] u
                   w1 :: (Lib.Exp -> Lib.Exp -> Lib.Exp)
                         -> Text.Parsec.Prim.State [GHC.Types.Char] u
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b
                   w2 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b
                   w3 :: (Lib.Exp -> Lib.Exp -> Lib.Exp)
                         -> Text.Parsec.Prim.State [GHC.Types.Char] u
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b
                   w4 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b ->
                 Lib.$wa1 @ u @ b w w1 w3 w4) -}
0fc45105b637227c742f76d79a0174fd
  appExp4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] st
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ st
                   @ b
                   eta2 :: Text.Parsec.Prim.State [GHC.Types.Char] st
                   eta3 :: Lib.Exp
                           -> Text.Parsec.Prim.State [GHC.Types.Char] st
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta5 :: Lib.Exp
                           -> Text.Parsec.Prim.State [GHC.Types.Char] st
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta6 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b ->
                 Text.Parsec.Combinator.chainl3
                   @ [GHC.Types.Char]
                   @ st
                   @ Data.Functor.Identity.Identity
                   @ Lib.Exp
                   (Lib.appExp5 @ st)
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <st>_R
                             <Data.Functor.Identity.Identity>_R
                             <Lib.Exp>_R))
                   (Lib.addOp1 @ st)
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <st>_R
                             <Data.Functor.Identity.Identity>_R
                             <Lib.Exp -> Lib.Exp -> Lib.Exp>_R))
                   @ b
                   eta2
                   eta3
                   eta4
                   eta5
                   eta6) -}
c82fab8736ede3c76137110d22b99d22
  appExp5 ::
    Text.Parsec.Prim.State [GHC.Types.Char] st
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ st
                   @ b
                   eta2 :: Text.Parsec.Prim.State [GHC.Types.Char] st
                   eta3 :: Lib.Exp
                           -> Text.Parsec.Prim.State [GHC.Types.Char] st
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta5 :: Lib.Exp
                           -> Text.Parsec.Prim.State [GHC.Types.Char] st
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta6 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b ->
                 Text.Parsec.Combinator.chainl3
                   @ [GHC.Types.Char]
                   @ st
                   @ Data.Functor.Identity.Identity
                   @ Lib.Exp
                   (Lib.app1 @ st)
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <st>_R
                             <Data.Functor.Identity.Identity>_R
                             <Lib.Exp>_R))
                   (Lib.appExp6 @ st)
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <st>_R
                             <Data.Functor.Identity.Identity>_R
                             <Lib.Exp -> Lib.Exp -> Lib.Exp>_R))
                   @ b
                   eta2
                   eta3
                   eta4
                   eta5
                   eta6) -}
6054db11b4b01851eae836c0459db76d
  appExp6 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((Lib.Exp -> Lib.Exp -> Lib.Exp)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((Lib.Exp -> Lib.Exp -> Lib.Exp)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ u
                   @ b
                   w :: Text.Parsec.Prim.State [GHC.Types.Char] u
                   w1 :: (Lib.Exp -> Lib.Exp -> Lib.Exp)
                         -> Text.Parsec.Prim.State [GHC.Types.Char] u
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b
                   w2 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b
                   w3 :: (Lib.Exp -> Lib.Exp -> Lib.Exp)
                         -> Text.Parsec.Prim.State [GHC.Types.Char] u
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b
                   w4 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b ->
                 Lib.$wa2 @ u @ b w w1 w3 w4) -}
0bc062ed7f708836211166f9a8185c5c
  app_go :: [Lib.Exp] -> Lib.Exp -> Lib.Exp
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U> -}
b02865b64ce7c42a4e8bf0c8a31a8525
  app_go1 :: [Lib.Exp] -> Lib.Exp -> Lib.Exp
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U> -}
8dbeef3a5724b6fe3c9f4772c03174bd
  arith ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] st Data.Functor.Identity.Identity Lib.Exp
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.appExp4
                  `cast`
                (forall st.
                 Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <st>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lib.Exp>_R)) -}
f8ff0b6cfca41ea4ed371cddffd44ff0
  atom ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] st Data.Functor.Identity.Identity Lib.Exp
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.app2
                  `cast`
                (forall st.
                 Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <st>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lib.Exp>_R)) -}
ecc1bf906a9d8c27fbabbd8cc4123784
  compOp ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char]
      u
      Data.Functor.Identity.Identity
      (Lib.Exp -> Lib.Exp -> Lib.Exp)
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.appExp3
                  `cast`
                (forall u.
                 Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lib.Exp -> Lib.Exp -> Lib.Exp>_R)) -}
23a136aae598c99d6f6a8a949faf9ba4
  decl ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] st Data.Functor.Identity.Identity Lib.Stmt
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.decl1
                  `cast`
                (forall st.
                 Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <st>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lib.Stmt>_R)) -}
349180aae0e8ca0908880beee53c0633
  decl1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] st
    -> (Lib.Stmt
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Lib.Stmt
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ st
                   @ b1
                   eta :: Text.Parsec.Prim.State [GHC.Types.Char] st
                   eta1 :: Lib.Stmt
                           -> Text.Parsec.Prim.State [GHC.Types.Char] st
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta3 :: Lib.Stmt
                           -> Text.Parsec.Prim.State [GHC.Types.Char] st
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Lib.decl3
                   @ st
                   @ b1
                   eta
                   (\ x10 :: [GHC.Types.Char]
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] st
                      err :: Text.Parsec.Error.ParseError ->
                    Lib.decl2
                      @ st
                      x10
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x11 :: Lib.Stmt
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta1 x11 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta2 (Text.Parsec.Error.mergeError err err')))
                   eta4
                   (\ x10 :: [GHC.Types.Char]
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    Lib.decl2
                      @ st
                      x10
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x11 :: Lib.Stmt
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta3 x11 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta4 (Text.Parsec.Error.mergeError err err')))
                   eta4) -}
d8472b6fa071c0c5ae5c47e2b0de4e66
  decl2 ::
    [GHC.Types.Char]
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] st
       -> (Lib.Stmt
           -> Text.Parsec.Prim.State [GHC.Types.Char] st
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Lib.Stmt
           -> Text.Parsec.Prim.State [GHC.Types.Char] st
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
97910cac9a53fbaa4e891a95a5540a0d
  decl3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] st
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
b1670348873a32e5e29813e1a2c13725
  expr ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] st Data.Functor.Identity.Identity Lib.Exp
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.expr1
                  `cast`
                (forall st.
                 Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <st>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lib.Exp>_R)) -}
ec33c279df6a04d53abd0f0306cc4f7b
  expr1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] st
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ st
                   @ b
                   eta2 :: Text.Parsec.Prim.State [GHC.Types.Char] st
                   eta3 :: Lib.Exp
                           -> Text.Parsec.Prim.State [GHC.Types.Char] st
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta5 :: Lib.Exp
                           -> Text.Parsec.Prim.State [GHC.Types.Char] st
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta6 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b ->
                 Text.Parsec.Combinator.chainl3
                   @ [GHC.Types.Char]
                   @ st
                   @ Data.Functor.Identity.Identity
                   @ Lib.Exp
                   (Lib.appExp4 @ st)
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <st>_R
                             <Data.Functor.Identity.Identity>_R
                             <Lib.Exp>_R))
                   (Lib.appExp3 @ st)
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <st>_R
                             <Data.Functor.Identity.Identity>_R
                             <Lib.Exp -> Lib.Exp -> Lib.Exp>_R))
                   @ b
                   eta2
                   eta3
                   eta4
                   eta5
                   eta6) -}
aebb7bbb66699281b6d9d11fb649be19
  factor ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] st Data.Functor.Identity.Identity Lib.Exp
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.app1
                  `cast`
                (forall st.
                 Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <st>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lib.Exp>_R)) -}
c05528290b883e74bd8af1d40b4aedad
  ifExp ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] st Data.Functor.Identity.Identity Lib.Exp
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.ifExp1
                  `cast`
                (forall st.
                 Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <st>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lib.Exp>_R)) -}
beafd2d4e4516779acd7e10c69904a95
  ifExp1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] st
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ st
                   @ b1
                   eta :: Text.Parsec.Prim.State [GHC.Types.Char] st
                   eta1 :: Lib.Exp
                           -> Text.Parsec.Prim.State [GHC.Types.Char] st
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta3 :: Lib.Exp
                           -> Text.Parsec.Prim.State [GHC.Types.Char] st
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Lib.ifExp5
                   @ st
                   Lib.ifExp4
                   @ b1
                   eta
                   (\ x10 :: GHC.Base.String
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    Lib.ifExp2
                      @ st
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x11 :: Lib.Exp
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta1 x11 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta2 (Text.Parsec.Error.mergeError err err')))
                   eta4
                   (\ x10 :: GHC.Base.String
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    Lib.ifExp2
                      @ st
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x11 :: Lib.Exp
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta3 x11 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta4 (Text.Parsec.Error.mergeError err err')))
                   eta4) -}
df4618172049439296cfa72789c093f7
  ifExp2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] st
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ st
                   @ b1
                   eta :: Text.Parsec.Prim.State [GHC.Types.Char] st
                   eta1 :: Lib.Exp
                           -> Text.Parsec.Prim.State [GHC.Types.Char] st
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta3 :: Lib.Exp
                           -> Text.Parsec.Prim.State [GHC.Types.Char] st
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Combinator.chainl3
                   @ [GHC.Types.Char]
                   @ st
                   @ Data.Functor.Identity.Identity
                   @ Lib.Exp
                   (Lib.appExp4 @ st)
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <st>_R
                             <Data.Functor.Identity.Identity>_R
                             <Lib.Exp>_R))
                   (Lib.appExp3 @ st)
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <st>_R
                             <Data.Functor.Identity.Identity>_R
                             <Lib.Exp -> Lib.Exp -> Lib.Exp>_R))
                   @ b1
                   eta
                   (\ x10 :: Lib.Exp
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    Lib.ifExp3
                      @ st
                      x10
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x11 :: Lib.Exp
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta1 x11 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta2 (Text.Parsec.Error.mergeError err err')))
                   eta2
                   (\ x10 :: Lib.Exp
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    Lib.ifExp3
                      @ st
                      x10
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x11 :: Lib.Exp
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta3 x11 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta4 (Text.Parsec.Error.mergeError err err')))
                   eta4) -}
03763ce6d5e8cfd5c2085fdd0e867321
  ifExp3 ::
    Lib.Exp
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] st
       -> (Lib.Exp
           -> Text.Parsec.Prim.State [GHC.Types.Char] st
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Lib.Exp
           -> Text.Parsec.Prim.State [GHC.Types.Char] st
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
980ddb88c7c257223cdd3bea8dc511a1
  ifExp4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "if"#) -}
531344313a41900f5c40520892fca727
  ifExp5 ::
    GHC.Base.String
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] u
       -> (GHC.Base.String
           -> Text.Parsec.Prim.State [GHC.Types.Char] u
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (GHC.Base.String
           -> Text.Parsec.Prim.State [GHC.Types.Char] u
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <S,U><L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
ddb172c0213a9f159194fa2c43dff754
  int ::
    Text.Parsec.Prim.Stream s m GHC.Types.Char =>
    Text.Parsec.Prim.ParsecT s u m GHC.Integer.Type.Integer
  {- Arity: 6,
     Strictness: <S(S(LC(C(S))LLL)L),U(U(A,C(C1(U)),A,A,A),C(U))><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.int2
                  `cast`
                (forall s u (m :: * -> *).
                 <Text.Parsec.Prim.Stream s m GHC.Types.Char>_R
                 ->_R Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                               <s>_R <u>_R <m>_R <GHC.Integer.Type.Integer>_R)) -}
fef63671960bf09bf4d5d9ab3b5f50f8
  int1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> (GHC.Integer.Type.Integer
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Integer.Type.Integer
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
210d713ec0c3ac6a630ee36532de4704
  int2 ::
    Text.Parsec.Prim.Stream s m GHC.Types.Char =>
    forall b.
    Text.Parsec.Prim.State s u
    -> (GHC.Integer.Type.Integer
        -> Text.Parsec.Prim.State s u
        -> Text.Parsec.Error.ParseError
        -> m b)
    -> (Text.Parsec.Error.ParseError -> m b)
    -> (GHC.Integer.Type.Integer
        -> Text.Parsec.Prim.State s u
        -> Text.Parsec.Error.ParseError
        -> m b)
    -> (Text.Parsec.Error.ParseError -> m b)
    -> m b
  {- Arity: 6,
     Strictness: <S(S(LC(C(S))LLL)L),U(U(A,C(C1(U)),A,A,A),C(U))><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
1d5658327d205ca51e8fd8cf49991982
  intExp ::
    Text.Parsec.Prim.Stream s m GHC.Types.Char =>
    Text.Parsec.Prim.ParsecT s u m Lib.Exp
  {- Arity: 6,
     Strictness: <S(S(LC(C(S))LLL)L),U(U(A,C(C1(U)),A,A,A),C(U))><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.intExp2
                  `cast`
                (forall s u (m :: * -> *).
                 <Text.Parsec.Prim.Stream s m GHC.Types.Char>_R
                 ->_R Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                               <s>_R <u>_R <m>_R <Lib.Exp>_R)) -}
9f83db8e39291b19caa664c6a954e3db
  intExp1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ u
                   @ b1
                   eta :: Text.Parsec.Prim.State [GHC.Types.Char] u
                   eta1 :: Lib.Exp
                           -> Text.Parsec.Prim.State [GHC.Types.Char] u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta3 :: Lib.Exp
                           -> Text.Parsec.Prim.State [GHC.Types.Char] u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Lib.int1
                   @ u
                   @ b1
                   eta
                   (\ x10 :: GHC.Integer.Type.Integer
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] u[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    eta1
                      (Lib.IntExp x10)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eta2
                   (\ x10 :: GHC.Integer.Type.Integer
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] u[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    eta3
                      (Lib.IntExp x10)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eta4) -}
a3f283d250d3dfeab39709b9d040ba9e
  intExp2 ::
    Text.Parsec.Prim.Stream s m GHC.Types.Char =>
    forall b.
    Text.Parsec.Prim.State s u
    -> (Lib.Exp
        -> Text.Parsec.Prim.State s u
        -> Text.Parsec.Error.ParseError
        -> m b)
    -> (Text.Parsec.Error.ParseError -> m b)
    -> (Lib.Exp
        -> Text.Parsec.Prim.State s u
        -> Text.Parsec.Error.ParseError
        -> m b)
    -> (Text.Parsec.Error.ParseError -> m b)
    -> m b
  {- Arity: 6,
     Strictness: <S(S(LC(C(S))LLL)L),U(U(A,C(C1(U)),A,A,A),C(U))><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ s
                   @ u
                   @ (m :: * -> *)
                   $dStream :: Text.Parsec.Prim.Stream s m GHC.Types.Char
                   @ b
                   eta :: Text.Parsec.Prim.State s u
                   eta1 :: Lib.Exp
                           -> Text.Parsec.Prim.State s u
                           -> Text.Parsec.Error.ParseError
                           -> m b
                   eta2 :: Text.Parsec.Error.ParseError -> m b
                   eta3 :: Lib.Exp
                           -> Text.Parsec.Prim.State s u
                           -> Text.Parsec.Error.ParseError
                           -> m b
                   eta4 :: Text.Parsec.Error.ParseError -> m b ->
                 Lib.int2
                   @ s
                   @ u
                   @ m
                   $dStream
                   @ b
                   eta
                   (\ x10 :: GHC.Integer.Type.Integer
                      s2 :: Text.Parsec.Prim.State s u[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    eta1
                      (Lib.IntExp x10)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eta2
                   (\ x10 :: GHC.Integer.Type.Integer
                      s2 :: Text.Parsec.Prim.State s u[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    eta3
                      (Lib.IntExp x10)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eta4) -}
c7800b7dd6231e883adc76d73c8baede
  keywords :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Lib.ifExp4
                   Lib.keywords1) -}
cd0f44169aa28409927480cb05326790
  keywords1 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Lib.keywords4
                   Lib.keywords2) -}
476a18cfec7c049e314fa154a04ef70f
  keywords2 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Lib.keywords3
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
591f7f84aeb372a5e1259765ba8a6648
  keywords3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "else"#) -}
fa7a84f6e2d15c30fa7db83d389ece51
  keywords4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "then"#) -}
1595af3282c574956784d68a60aa2a5d
  lamExp ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] st Data.Functor.Identity.Identity Lib.Exp
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.lamExp1
                  `cast`
                (forall st.
                 Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <st>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lib.Exp>_R)) -}
972ff2ea76b96a7e86e970d6b2c52d00
  lamExp1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] st
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ st
                   @ b1
                   eta :: Text.Parsec.Prim.State [GHC.Types.Char] st
                   eta1 :: Lib.Exp
                           -> Text.Parsec.Prim.State [GHC.Types.Char] st
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta3 :: Lib.Exp
                           -> Text.Parsec.Prim.State [GHC.Types.Char] st
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Lib.ifExp5
                   @ st
                   Lib.lamExp4
                   @ b1
                   eta
                   (\ x10 :: GHC.Base.String
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    Lib.lamExp2
                      @ st
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x11 :: Lib.Exp
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta1 x11 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta2 (Text.Parsec.Error.mergeError err err')))
                   eta4
                   (\ x10 :: GHC.Base.String
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    Lib.lamExp2
                      @ st
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x11 :: Lib.Exp
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta3 x11 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta4 (Text.Parsec.Error.mergeError err err')))
                   eta4) -}
e9692f710f058a04fb74693379a4e1cd
  lamExp2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] st
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ st
                   @ b1
                   eta :: Text.Parsec.Prim.State [GHC.Types.Char] st
                   eta1 :: Lib.Exp
                           -> Text.Parsec.Prim.State [GHC.Types.Char] st
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta3 :: Lib.Exp
                           -> Text.Parsec.Prim.State [GHC.Types.Char] st
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Lib.decl3
                   @ st
                   @ b1
                   eta
                   (\ x10 :: [GHC.Types.Char]
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] st
                      err :: Text.Parsec.Error.ParseError ->
                    Lib.lamExp3
                      @ st
                      x10
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x11 :: Lib.Exp
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta1 x11 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta2 (Text.Parsec.Error.mergeError err err')))
                   eta4
                   (\ x10 :: [GHC.Types.Char]
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    Lib.lamExp3
                      @ st
                      x10
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x11 :: Lib.Exp
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] st[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta3 x11 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta4 (Text.Parsec.Error.mergeError err err')))
                   eta4) -}
18af29c5fb25f7a7f6b23fb5ea5936f9
  lamExp3 ::
    [GHC.Types.Char]
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] st
       -> (Lib.Exp
           -> Text.Parsec.Prim.State [GHC.Types.Char] st
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Lib.Exp
           -> Text.Parsec.Prim.State [GHC.Types.Char] st
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
eeebbe43054112d053d2fd0f45bb3dee
  lamExp4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "\\"#) -}
9531689426168af474e702625d70ee1d
  mulOp ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char]
      u
      Data.Functor.Identity.Identity
      (Lib.Exp -> Lib.Exp -> Lib.Exp)
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.appExp6
                  `cast`
                (forall u.
                 Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lib.Exp -> Lib.Exp -> Lib.Exp>_R)) -}
1c54ce97ed73bad83989d1f1054e170a
  oper ::
    Text.Parsec.Prim.Stream s m GHC.Types.Char =>
    Text.Parsec.Prim.ParsecT s u m [GHC.Types.Char]
  {- Arity: 6,
     Strictness: <S(S(LC(C(S))LLL)L),U(U(A,C(C1(U)),A,A,A),C(U))><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.oper1
                  `cast`
                (forall s u (m :: * -> *).
                 <Text.Parsec.Prim.Stream s m GHC.Types.Char>_R
                 ->_R Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                               <s>_R <u>_R <m>_R <[GHC.Types.Char]>_R)) -}
0423dd2769838f64be73ccbd7cf06854
  oper1 ::
    Text.Parsec.Prim.Stream s m GHC.Types.Char =>
    forall b.
    Text.Parsec.Prim.State s u
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State s u
        -> Text.Parsec.Error.ParseError
        -> m b)
    -> (Text.Parsec.Error.ParseError -> m b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State s u
        -> Text.Parsec.Error.ParseError
        -> m b)
    -> (Text.Parsec.Error.ParseError -> m b)
    -> m b
  {- Arity: 6,
     Strictness: <S(S(LC(C(S))LLL)L),U(U(A,C(C1(U)),A,A,A),C(U))><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
22e8bd1148190ec08c6b20a1834e925d
  parens ::
    Text.Parsec.Prim.Stream s m GHC.Types.Char =>
    Text.Parsec.Prim.ParsecT s u m b
    -> Text.Parsec.Prim.ParsecT s u m b
  {- Arity: 7,
     Strictness: <L,U(U(U,U,U,U,U),C(U))><L,C(C1(C1(C1(C1(U)))))><L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.parens2
                  `cast`
                (forall b s u (m :: * -> *).
                 <Text.Parsec.Prim.Stream s m GHC.Types.Char>_R
                 ->_R <Text.Parsec.Prim.ParsecT s u m b>_R
                 ->_R Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                               <s>_R <u>_R <m>_R <b>_R)) -}
15ae978d61c0aae9660b49c7deff513a
  parens1 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity b
    -> forall b1.
       Text.Parsec.Prim.State [GHC.Types.Char] u
       -> (b
           -> Text.Parsec.Prim.State [GHC.Types.Char] u
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (b
           -> Text.Parsec.Prim.State [GHC.Types.Char] u
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <L,C(C1(C1(C1(C1(U)))))><L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
d6d135c9e6a71d480cd23f51713436ca
  parens2 ::
    Text.Parsec.Prim.Stream s m GHC.Types.Char =>
    Text.Parsec.Prim.ParsecT s u m b
    -> forall b1.
       Text.Parsec.Prim.State s u
       -> (b
           -> Text.Parsec.Prim.State s u
           -> Text.Parsec.Error.ParseError
           -> m b1)
       -> (Text.Parsec.Error.ParseError -> m b1)
       -> (b
           -> Text.Parsec.Prim.State s u
           -> Text.Parsec.Error.ParseError
           -> m b1)
       -> (Text.Parsec.Error.ParseError -> m b1)
       -> m b1
  {- Arity: 7,
     Strictness: <L,U(U(U,U,U,U,U),C(U))><L,C(C1(C1(C1(C1(U)))))><L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
e3445188f23e3c746e72adb21a655fcf
  parseDecl ::
    [GHC.Types.Char]
    -> Data.Either.Either Text.Parsec.Error.ParseError Lib.Stmt
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.parseDecl1
                  `cast`
                (<[GHC.Types.Char]>_R
                 ->_R Data.Functor.Identity.NTCo:Identity[0]
                          <Data.Either.Either Text.Parsec.Error.ParseError Lib.Stmt>_R) -}
f048d955008503df295f7c31d041b188
  parseDecl1 ::
    [GHC.Types.Char]
    -> Data.Functor.Identity.Identity
         (Data.Either.Either Text.Parsec.Error.ParseError Lib.Stmt)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ str :: [GHC.Types.Char] ->
                 Text.Parsec.Prim.runPT
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ Lib.Stmt
                   @ GHC.Types.Char
                   (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                   (Lib.decl1 @ ())
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Lib.Stmt>_R))
                   GHC.Tuple.()
                   Lib.parseDecl2
                   str) -}
2c50e4dae88ba204f8aff16b9bf7b129
  parseDecl2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "stdin"#) -}
8e9a5f6761ba19f8f542c77963195285
  parseExp ::
    [GHC.Types.Char]
    -> Data.Either.Either Text.Parsec.Error.ParseError Lib.Exp
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.parseExp1
                  `cast`
                (<[GHC.Types.Char]>_R
                 ->_R Data.Functor.Identity.NTCo:Identity[0]
                          <Data.Either.Either Text.Parsec.Error.ParseError Lib.Exp>_R) -}
943fe5cd88b2b87e9f6adab21c80d121
  parseExp1 ::
    [GHC.Types.Char]
    -> Data.Functor.Identity.Identity
         (Data.Either.Either Text.Parsec.Error.ParseError Lib.Exp)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ str :: [GHC.Types.Char] ->
                 Text.Parsec.Prim.runPT
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ Lib.Exp
                   @ GHC.Types.Char
                   (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                   (Lib.expr1 @ ())
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Lib.Exp>_R))
                   GHC.Tuple.()
                   Lib.parseDecl2
                   str) -}
73806c727b3b78d89e9108b6c2eedef3
  symbol ::
    Text.Parsec.Prim.Stream s m GHC.Types.Char =>
    GHC.Base.String -> Text.Parsec.Prim.ParsecT s u m GHC.Base.String
  {- Arity: 7,
     Strictness: <L,U(U(U,U,U,U,U),C(U))><S,U><L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.symbol1
                  `cast`
                (forall s u (m :: * -> *).
                 <Text.Parsec.Prim.Stream s m GHC.Types.Char>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                               <s>_R <u>_R <m>_R <GHC.Base.String>_R)) -}
7d724161ce6fb8bd3bd8fea0e1b9d4d7
  symbol1 ::
    Text.Parsec.Prim.Stream s m GHC.Types.Char =>
    GHC.Base.String
    -> forall b.
       Text.Parsec.Prim.State s u
       -> (GHC.Base.String
           -> Text.Parsec.Prim.State s u
           -> Text.Parsec.Error.ParseError
           -> m b)
       -> (Text.Parsec.Error.ParseError -> m b)
       -> (GHC.Base.String
           -> Text.Parsec.Prim.State s u
           -> Text.Parsec.Error.ParseError
           -> m b)
       -> (Text.Parsec.Error.ParseError -> m b)
       -> m b
  {- Arity: 7,
     Strictness: <L,U(U(U,U,U,U,U),C(U))><S,U><L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
d8e847feeba223c97d555ce4ad052a19
  term ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] st Data.Functor.Identity.Identity Lib.Exp
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.appExp5
                  `cast`
                (forall st.
                 Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <st>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lib.Exp>_R)) -}
70a8bfb4226c99c906b54660dc0ff225
  var ::
    Text.Parsec.String.GenParser GHC.Types.Char st [GHC.Types.Char]
  {- Arity: 5, Strictness: <L,U><L,U><L,A><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.var1
                  `cast`
                (forall st.
                 Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <st>_R
                          <Data.Functor.Identity.Identity>_R
                          <[GHC.Types.Char]>_R)) -}
c3aed0a06707637dc05e4c187718727b
  var1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] st
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,A><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, True)
                (\ @ st
                   @ b
                   s1 :: Text.Parsec.Prim.State [GHC.Types.Char] st
                   cok :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State [GHC.Types.Char] st
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b
                   ds :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b
                   eok :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State [GHC.Types.Char] st
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b
                   eerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b ->
                 Lib.decl3 @ st @ b s1 cok eerr eok eerr) -}
9aad0e5a9a8a38c52be87fefc66c437f
  varExp ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] st Data.Functor.Identity.Identity Lib.Exp
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.varExp1
                  `cast`
                (forall st.
                 Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <st>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lib.Exp>_R)) -}
19617119a3f3ff2cf4e1c7d67ae4f4fd
  varExp1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] st
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Lib.Exp
        -> Text.Parsec.Prim.State [GHC.Types.Char] st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,A><L,C(C1(C1(U)))><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ st
                   @ b1
                   w :: Text.Parsec.Prim.State [GHC.Types.Char] st
                   w1 :: Lib.Exp
                         -> Text.Parsec.Prim.State [GHC.Types.Char] st
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w2 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w3 :: Lib.Exp
                         -> Text.Parsec.Prim.State [GHC.Types.Char] st
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w4 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 Lib.$wa3 @ st @ b1 w w1 w3 w4) -}
instance GHC.Classes.Eq [Lib.Exp] = Lib.$fEqExp
instance GHC.Classes.Eq [Lib.Stmt] = Lib.$fEqStmt
instance GHC.Show.Show [Lib.Exp] = Lib.$fShowExp
instance GHC.Show.Show [Lib.Stmt] = Lib.$fShowStmt
instance Lib.ToStr [Lib.Exp] = Lib.$fToStrExp
instance Lib.ToStr [Lib.Stmt] = Lib.$fToStrStmt
"SPEC/Lib toStr @ Exp" [ALWAYS] forall tpl :: Lib.ToStr Lib.Exp
  Lib.toStr @ Lib.Exp tpl = Lib.$ctoStr
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

